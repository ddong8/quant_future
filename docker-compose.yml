services:
  postgres:
    image: postgres:13
    container_name: trading_postgres
    environment:
      POSTGRES_DB: trading_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    container_name: trading_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  influxdb:
    image: influxdb:2.0
    container_name: trading_influxdb
    environment:
      INFLUXDB_DB: trading
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: password
      INFLUXDB_ADMIN_TOKEN: my-super-secret-auth-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 使用我们创建的演示服务器
  backend:
    image: python:3.9-slim
    container_name: trading_backend
    working_dir: /app
    volumes:
      - ./demo_server.py:/app/demo_server.py
    command: >
      bash -c "
        pip install fastapi uvicorn[standard] &&
        python demo_server.py
      "
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: unless-stopped

  # 简化的前端服务
  frontend:
    image: nginx:alpine
    container_name: trading_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./frontend_html:/usr/share/nginx/html:ro

volumes:
  postgres_data:
  redis_data:
  influxdb_data:

networks:
  default:
    name: trading_network