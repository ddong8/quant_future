services:
  postgres:
    image: postgres:13
    container_name: trading_postgres
    environment:
      POSTGRES_DB: trading_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    container_name: trading_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  influxdb:
    image: influxdb:2.0
    container_name: trading_influxdb
    environment:
      INFLUXDB_DB: trading
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: password
      INFLUXDB_ADMIN_TOKEN: my-super-secret-auth-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 数据库初始化容器
  db-init:
    build:
      context: ./backend
      dockerfile: Dockerfile.init
    container_name: trading_db_init
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-super-secret-auth-token
      - INFLUXDB_ORG=trading-org
      - INFLUXDB_BUCKET=market-data
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - DB_INIT_TIMEOUT=60
      - DB_INIT_RETRY_COUNT=5
      - DB_INIT_RETRY_DELAY=2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: "no"  # 初始化容器只运行一次
    volumes:
      - ./backend:/app
      - ./logs:/var/log/trading
      - db_init_status:/var/lib/db-init
    command: ["python", "run_init.py"]

  # 完整的FastAPI后端应用
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trading_backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-super-secret-auth-token
      - INFLUXDB_ORG=trading-org
      - INFLUXDB_BUCKET=market-data
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - DEBUG=true
      - LOG_LEVEL=INFO
      - DB_INIT_TIMEOUT=30
      - DB_INIT_RETRY_COUNT=5
      - DB_INIT_RETRY_DELAY=2
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./logs:/var/log/trading
      - db_init_status:/var/lib/db-init
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 完整的Vue.js前端应用
  frontend:
    image: node:18-alpine
    container_name: trading_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
      - VITE_WS_BASE_URL=ws://localhost:8000/api/v1/ws
    command: >
      sh -c "
        echo '📦 安装前端依赖...' &&
        npm install --silent &&
        echo '🚀 启动完整Vue.js应用...' &&
        npm run dev -- --host 0.0.0.0 --port 3000
      "

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  db_init_status:

networks:
  default:
    name: trading_network