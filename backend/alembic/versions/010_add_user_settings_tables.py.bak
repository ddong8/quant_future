"""add user settings tables

Revision ID: 010
Revises: 009
Create Date: 2024-01-15 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '010'
down_revision = '009'
branch_labels = None
depends_on = None


def upgrade():
    # 更新users表
    op.add_column('users', sa.Column('timezone', sa.String(50), nullable=True))
    op.add_column('users', sa.Column('language', sa.String(10), nullable=True))
    op.add_column('users', sa.Column('date_format', sa.String(20), nullable=True))
    op.add_column('users', sa.Column('currency_display', sa.String(10), nullable=True))
    op.add_column('users', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    
    # 重命名avatar_url为avatar
    op.alter_column('users', 'avatar_url', new_column_name='avatar')
    
    # 重命名hashed_password为password_hash
    op.alter_column('users', 'hashed_password', new_column_name='password_hash')
    
    # 创建用户设置表
    op.create_table('user_settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('theme', sa.String(20), nullable=True, default='light'),
        sa.Column('sidebar_collapsed', sa.Boolean(), nullable=True, default=False),
        sa.Column('auto_refresh', sa.Boolean(), nullable=True, default=True),
        sa.Column('refresh_interval', sa.Integer(), nullable=True, default=30),
        sa.Column('default_chart_period', sa.String(10), nullable=True, default='1d'),
        sa.Column('show_advanced_features', sa.Boolean(), nullable=True, default=False),
        sa.Column('dashboard_layout', sa.JSON(), nullable=True),
        sa.Column('favorite_symbols', sa.JSON(), nullable=True),
        sa.Column('watchlists', sa.JSON(), nullable=True),
        sa.Column('quick_actions', sa.JSON(), nullable=True),
        sa.Column('chart_settings', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_settings_id'), 'user_settings', ['id'], unique=False)
    
    # 创建安全设置表
    op.create_table('security_settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('two_factor_enabled', sa.Boolean(), nullable=True, default=False),
        sa.Column('two_factor_secret', sa.String(32), nullable=True),
        sa.Column('backup_codes', sa.JSON(), nullable=True),
        sa.Column('login_notifications', sa.Boolean(), nullable=True, default=True),
        sa.Column('session_timeout', sa.Integer(), nullable=True, default=3600),
        sa.Column('max_failed_attempts', sa.Integer(), nullable=True, default=5),
        sa.Column('lockout_duration', sa.Integer(), nullable=True, default=900),
        sa.Column('ip_whitelist', sa.JSON(), nullable=True),
        sa.Column('allowed_devices', sa.Integer(), nullable=True, default=5),
        sa.Column('require_approval_new_device', sa.Boolean(), nullable=True, default=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_security_settings_id'), 'security_settings', ['id'], unique=False)
    
    # 创建通知设置表
    op.create_table('notification_settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('email_enabled', sa.Boolean(), nullable=True, default=True),
        sa.Column('sms_enabled', sa.Boolean(), nullable=True, default=False),
        sa.Column('push_enabled', sa.Boolean(), nullable=True, default=True),
        sa.Column('trade_notifications', sa.JSON(), nullable=True),
        sa.Column('risk_notifications', sa.JSON(), nullable=True),
        sa.Column('system_notifications', sa.JSON(), nullable=True),
        sa.Column('market_notifications', sa.JSON(), nullable=True),
        sa.Column('notification_hours', sa.JSON(), nullable=True),
        sa.Column('quiet_hours', sa.JSON(), nullable=True),
        sa.Column('digest_frequency', sa.String(20), nullable=True, default='daily'),
        sa.Column('max_notifications_per_hour', sa.Integer(), nullable=True, default=10),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_notification_settings_id'), 'notification_settings', ['id'], unique=False)
    
    # 创建登录设备表
    op.create_table('login_devices',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('device_name', sa.String(100), nullable=False),
        sa.Column('device_type', sa.String(50), nullable=False),
        sa.Column('device_id', sa.String(100), nullable=True),
        sa.Column('browser', sa.String(50), nullable=True),
        sa.Column('os', sa.String(50), nullable=True),
        sa.Column('ip_address', sa.String(45), nullable=False),
        sa.Column('location', sa.String(100), nullable=True),
        sa.Column('user_agent', sa.Text(), nullable=True),
        sa.Column('is_current', sa.Boolean(), nullable=True, default=False),
        sa.Column('is_trusted', sa.Boolean(), nullable=True, default=False),
        sa.Column('is_active', sa.Boolean(), nullable=True, default=True),
        sa.Column('first_login_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('last_login_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('last_activity_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_login_devices_id'), 'login_devices', ['id'], unique=False)
    op.create_index(op.f('ix_login_devices_user_id'), 'login_devices', ['user_id'], unique=False)
    
    # 创建用户活动日志表
    op.create_table('user_activity_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('action', sa.String(50), nullable=False),
        sa.Column('description', sa.String(200), nullable=False),
        sa.Column('category', sa.String(50), nullable=True),
        sa.Column('ip_address', sa.String(45), nullable=True),
        sa.Column('user_agent', sa.Text(), nullable=True),
        sa.Column('request_id', sa.String(50), nullable=True),
        sa.Column('status', sa.String(20), nullable=True, default='success'),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('metadata', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activity_logs_id'), 'user_activity_logs', ['id'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_user_id'), 'user_activity_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_action'), 'user_activity_logs', ['action'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_created_at'), 'user_activity_logs', ['created_at'], unique=False)
    
    # 创建API密钥表
    op.create_table('api_keys',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(100), nullable=False),
        sa.Column('key_id', sa.String(32), nullable=False),
        sa.Column('key_secret_hash', sa.String(128), nullable=False),
        sa.Column('permissions', sa.JSON(), nullable=False),
        sa.Column('ip_whitelist', sa.JSON(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True, default=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('last_used_at', sa.DateTime(), nullable=True),
        sa.Column('usage_count', sa.Integer(), nullable=True, default=0),
        sa.Column('rate_limit', sa.Integer(), nullable=True, default=1000),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key_id')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)
    
    # 创建用户偏好设置表
    op.create_table('user_preferences',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('default_order_type', sa.String(20), nullable=True, default='MARKET'),
        sa.Column('default_time_in_force', sa.String(20), nullable=True, default='DAY'),
        sa.Column('confirm_orders', sa.Boolean(), nullable=True, default=True),
        sa.Column('auto_cancel_orders', sa.Boolean(), nullable=True, default=False),
        sa.Column('risk_tolerance', sa.String(20), nullable=True, default='MEDIUM'),
        sa.Column('max_position_size', sa.Integer(), nullable=True),
        sa.Column('max_daily_loss', sa.Integer(), nullable=True),
        sa.Column('stop_loss_percentage', sa.Integer(), nullable=True),
        sa.Column('currency_display', sa.String(10), nullable=True, default='USD'),
        sa.Column('number_format', sa.String(20), nullable=True, default='en-US'),
        sa.Column('date_format', sa.String(20), nullable=True, default='YYYY-MM-DD'),
        sa.Column('time_format', sa.String(10), nullable=True, default='24h'),
        sa.Column('auto_logout_minutes', sa.Integer(), nullable=True, default=60),
        sa.Column('sound_notifications', sa.Boolean(), nullable=True, default=True),
        sa.Column('animation_enabled', sa.Boolean(), nullable=True, default=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)


def downgrade():
    # 删除创建的表
    op.drop_table('user_preferences')
    op.drop_table('api_keys')
    op.drop_table('user_activity_logs')
    op.drop_table('login_devices')
    op.drop_table('notification_settings')
    op.drop_table('security_settings')
    op.drop_table('user_settings')
    
    # 恢复users表的字段名
    op.alter_column('users', 'password_hash', new_column_name='hashed_password')
    op.alter_column('users', 'avatar', new_column_name='avatar_url')
    
    # 删除添加的列
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'currency_display')
    op.drop_column('users', 'date_format')
    op.drop_column('users', 'language')
    op.drop_column('users', 'timezone')