"""add price alert and market anomaly tables

Revision ID: 014
Revises: 013
Create Date: 2024-01-15 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '014'
down_revision = '013'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 创建价格提醒表
    op.create_table('price_alerts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('symbol_id', sa.Integer(), nullable=False),
        sa.Column('alert_type', sa.String(length=20), nullable=False, comment='提醒类型'),
        sa.Column('condition_value', sa.Numeric(precision=15, scale=6), nullable=False, comment='条件值'),
        sa.Column('comparison_operator', sa.String(length=10), nullable=False, comment='比较操作符'),
        sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否启用'),
        sa.Column('is_repeatable', sa.Boolean(), nullable=False, comment='是否可重复触发'),
        sa.Column('notification_methods', sa.JSON(), nullable=True, comment='通知方式'),
        sa.Column('triggered_at', sa.DateTime(), nullable=True, comment='触发时间'),
        sa.Column('triggered_price', sa.Numeric(precision=15, scale=6), nullable=True, comment='触发价格'),
        sa.Column('trigger_count', sa.Integer(), nullable=True, comment='触发次数'),
        sa.Column('expires_at', sa.DateTime(), nullable=True, comment='过期时间'),
        sa.Column('note', sa.Text(), nullable=True, comment='备注'),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
        sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_price_alerts_active', 'price_alerts', ['is_active', 'expires_at'], unique=False)
    op.create_index('ix_price_alerts_user_symbol', 'price_alerts', ['user_id', 'symbol_id'], unique=False)
    op.create_index(op.f('ix_price_alerts_id'), 'price_alerts', ['id'], unique=False)
    op.create_index(op.f('ix_price_alerts_symbol_id'), 'price_alerts', ['symbol_id'], unique=False)
    op.create_index(op.f('ix_price_alerts_user_id'), 'price_alerts', ['user_id'], unique=False)
    
    # 创建市场异动表
    op.create_table('market_anomalies',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('symbol_id', sa.Integer(), nullable=False),
        sa.Column('anomaly_type', sa.String(length=20), nullable=False, comment='异动类型'),
        sa.Column('severity', sa.String(length=10), nullable=False, comment='严重程度'),
        sa.Column('trigger_price', sa.Numeric(precision=15, scale=6), nullable=True, comment='触发价格'),
        sa.Column('price_change', sa.Numeric(precision=15, scale=6), nullable=True, comment='价格变动'),
        sa.Column('price_change_percent', sa.Numeric(precision=8, scale=4), nullable=True, comment='价格变动百分比'),
        sa.Column('volume_ratio', sa.Numeric(precision=8, scale=2), nullable=True, comment='成交量倍数'),
        sa.Column('title', sa.String(length=200), nullable=False, comment='异动标题'),
        sa.Column('description', sa.Text(), nullable=True, comment='异动描述'),
        sa.Column('is_processed', sa.Boolean(), nullable=True, comment='是否已处理'),
        sa.Column('is_notified', sa.Boolean(), nullable=True, comment='是否已通知'),
        sa.Column('detected_at', sa.DateTime(), nullable=False, comment='检测时间'),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
        sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_market_anomalies_severity', 'market_anomalies', ['severity', 'is_processed'], unique=False)
    op.create_index('ix_market_anomalies_symbol_time', 'market_anomalies', ['symbol_id', 'detected_at'], unique=False)
    op.create_index(op.f('ix_market_anomalies_id'), 'market_anomalies', ['id'], unique=False)
    op.create_index(op.f('ix_market_anomalies_symbol_id'), 'market_anomalies', ['symbol_id'], unique=False)
    
    # 为价格提醒表设置默认值
    op.execute("ALTER TABLE price_alerts ALTER COLUMN is_active SET DEFAULT true")
    op.execute("ALTER TABLE price_alerts ALTER COLUMN is_repeatable SET DEFAULT false")
    op.execute("ALTER TABLE price_alerts ALTER COLUMN trigger_count SET DEFAULT 0")
    
    # 为市场异动表设置默认值
    op.execute("ALTER TABLE market_anomalies ALTER COLUMN is_processed SET DEFAULT false")
    op.execute("ALTER TABLE market_anomalies ALTER COLUMN is_notified SET DEFAULT false")
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_market_anomalies_symbol_id'), table_name='market_anomalies')
    op.drop_index(op.f('ix_market_anomalies_id'), table_name='market_anomalies')
    op.drop_index('ix_market_anomalies_symbol_time', table_name='market_anomalies')
    op.drop_index('ix_market_anomalies_severity', table_name='market_anomalies')
    op.drop_table('market_anomalies')
    
    op.drop_index(op.f('ix_price_alerts_user_id'), table_name='price_alerts')
    op.drop_index(op.f('ix_price_alerts_symbol_id'), table_name='price_alerts')
    op.drop_index(op.f('ix_price_alerts_id'), table_name='price_alerts')
    op.drop_index('ix_price_alerts_user_symbol', table_name='price_alerts')
    op.drop_index('ix_price_alerts_active', table_name='price_alerts')
    op.drop_table('price_alerts')
    # ### end Alembic commands ###